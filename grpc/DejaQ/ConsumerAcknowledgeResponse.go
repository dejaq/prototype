// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package DejaQ

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ConsumerAcknowledgeResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsConsumerAcknowledgeResponse(buf []byte, offset flatbuffers.UOffsetT) *ConsumerAcknowledgeResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ConsumerAcknowledgeResponse{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ConsumerAcknowledgeResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ConsumerAcknowledgeResponse) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ConsumerAcknowledgeResponse) Ack() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *ConsumerAcknowledgeResponse) MutateAck(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func ConsumerAcknowledgeResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func ConsumerAcknowledgeResponseAddAck(builder *flatbuffers.Builder, ack bool) {
	builder.PrependBoolSlot(0, ack, false)
}
func ConsumerAcknowledgeResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
